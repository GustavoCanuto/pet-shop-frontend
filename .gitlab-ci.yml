stages: [build, deploy]

variables:
  FRONT_DST: "/var/www/petshop-frontend"

build_front:
  stage: build
  tags: [oracle]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "gitlab"'
    - if: '$CI_COMMIT_BRANCH == "devops"'
  script:
    - export HOST_UID=$(id -u) HOST_GID=$(id -g)
    - >
      docker run --rm
      -u $HOST_UID:$HOST_GID
      -e HOME=/tmp
      -e npm_config_cache=/tmp/npm-cache
      -e EXPO_NO_TELEMETRY=1
      -e NODE_ENV=production
      -e CI=1
      -v "$CI_PROJECT_DIR":/app -w /app $DOCKER_NODE_IMAGE
      sh -lc '
        set -e; mkdir -p /tmp/npm-cache;
        if [ -f package-lock.json ]; then
          npm ci --no-audit --fund=false;
        else
          npm i --no-audit --fund=false;
        fi;
        # igual ao seu Dockerfile: React 18 apenas para o build web
        npm i --no-save react@18 react-dom@18;
        npx expo export --platform web --output-dir dist;
      '
  artifacts:
    paths: [dist]
    expire_in: 1 week

deploy_front:
  stage: deploy
  tags: [oracle]
  needs: [build_front]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "gitlab"'
    - if: '$CI_COMMIT_BRANCH == "devops"'
  script:
    - mkdir -p "$FRONT_DST"
    - rsync -a --delete dist/ "$FRONT_DST"/
